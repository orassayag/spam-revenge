-Update packages + Recreate package-lock.json.
-Remove code comments to a backup TXT file.
-Convert " to ' in the relevant places.
-Remove all 'debugger' keywords.
-Recheck error numbers in error_index.txt.
-Check 'let' needs to be converted to 'const'.
-Check places to change from simple parameters with dynamic objects to classes.
-Make sure all comments '//' have: 1. space 2. ends with a dot.
-Make sure 'id' => 'Id', 'url' => 'URL', 'api' => 'API'.
-Make sure spaces in all files between bottom, need to fix cases like this:
}
module.exports
}
export default
-Change all '.length > 0' to 'isExists'.
-Change all (where it's possible) from 'console.log' to 'logUtils.log'.
-Remove duplicate import/require (convert to index.js if possible).
-Sort alphabetically all the imports/requires by https://alphabetizer.flap.tv/.
-Sort alphabetically all the imports/requires: external packages, settings, (containers, components, store, assert) data, models, enums, services, utils.
-File extensions should be upper case: JSON, TXT, etc.
-Remove the space lines inside methods and functions.
-Remove the duplicate empty lines: \n\s*\n\s*\n
-Remove the first empty line: ^(?<![\s])\n
-Remove the last empty line: \n\s*$(?!\n)
-Detect all comments without a dot at the end: ^// .*(?<!\.)$
-Make sure all switch-case have curly braces.
-Clear unused enums and make sure all in used really exists.
-Search for 'async ' and create a list of functions/methods, and make sure that all calls have await.
-Scan all files for spell mistakes with the 'files-spell-checker' project.
-Do all the 'ToDo' tasks.
-Format all documents.
-Verify all works well.
-Fix TXT files spell mistakes via Gmail (Also, convert '_' to ' ' in all places when checking).
-Move all complete tasks from here to complete_tasks.txt.
-Upload to GitHub.
-Backup to iOmega.